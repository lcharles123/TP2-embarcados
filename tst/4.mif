DEPTH = 128;
WIDTH = 8;
ADDRESS_RADIX = HEX;
DATA_RADIX = BIN;
CONTENT
BEGIN

00        :  00011000;              -- continuar: read A0
01        :  00000000;              -- 
02        :  01101000;              -- push A0
03        :  00000000;              -- 
04        :  01010000;              -- jmpz A0 terminouEntrada
05        :  00001000;              -- 
06        :  01001000;              -- jump continuar
07        :  00000000;              -- 
08        :  10110000;              -- terminouEntrada: copytop A1 ;topo da pilha, sera a referencia para parada
09        :  00000001;              -- 
0A        :  10011000;              -- load_c A0 0 ;contador para carregar os dados da pilha
0B        :  00000000;              -- 
0C        :  10100100;              -- load_i A2 A0 ;carregar o primeiro elemento da pilha
0D        :  00000000;              -- 
0E        :  10100010;              -- loop: load_i A1 A0 ; carrega em A1 a ref na pilha dada por A0
0F        :  00000000;              -- 
10        :  00110010;              -- subtract A1 A3 ; A1-A3 < 0 -> A1 < A3 -> procurar prox
11        :  00000011;              -- 
12        :  01011010;              -- jmpn A1 pilhaVaz ; nao eh menor, testar por pilha vazia
13        :  00011000;              -- 
14        :  10100010;              -- load_i A1 A0 ;carregar novamente
15        :  00000000;              -- 
16        :  01100010;              -- move A1 A3 ; novo maximo
17        :  00000011;              -- 
18        :  01010000;              -- pilhaVaz: jmpz A0 ok ; acaba caso pilha vazia
19        :  00011100;              -- 
1A        :  01001000;              -- jump terminouEntrada
1B        :  00001000;              -- 
1C        :  00100000;              -- ok: write A3
1D        :  00000011;              -- 
[1E..7F]:  00000000;              -- 
END;
